@use './variables'as var;



//   ::: RADIUS :::   //

@mixin rounded($radius) {
    border-radius: $radius;
}

@mixin topRounded($radius) {
    border-radius: $radius $radius 0 0;
}

@mixin rightRounded($radius) {
    border-radius: 0 $radius $radius 0;
}

@mixin bottomRounded($radius) {
    border-radius: 0 0 $radius $radius;
}

@mixin leftRounded($radius) {
    border-radius: $radius 0 0 $radius;
}



//   ::: FRAMES :::   //

//without borders
@mixin noBorders {
    border: 0;
}

//without paddings
@mixin noPadding {
    padding: 0;
}

//without margins
@mixin noMargin {
    margin: 0;
}

//without margin and padding
@mixin noFrames {
    border: none;
    padding: 0;
    margin: 0;
}

@mixin frames($padding, $margin) {
    padding: $padding;
    margin: $margin;
}



//   ::: TEXT :::   //

//font
@mixin font($size, $weight, $family: Roboto) {
    font: $weight $size $family;
}

//text colors
@mixin whiteText {
    color: white;
}

@mixin greenText {
    color: var.$darkGreen;
}

@mixin darkGrayText {
    color: var.$darkGray;
}

//icon colors
@mixin grayText {
    color: var.$grey;
}

//purple icon (hover)
@mixin purpleIcon {
    color: var.$darkPurple;
}



//   ::: ICONS :::   //

//white icon
@mixin whiteIcon {
    color: white;
}

//gray icon
@mixin greenIcon {
    color: var.$darkGreen;
}

//dark gray icon
@mixin darkGrayIcon {
    color: var.$darkGray;
}

//basic gray icon
@mixin grayIcon {
    color: var.$grey;
}

//heart icon
@mixin heartIcon($content) {
    position: relative;
    z-index: 1;
    padding: 0 25px;
    margin: 0;

    &:after {
        content: $content;
        position: absolute;
        top: -8px;
        left: 0;
        opacity: 0;
        z-index: -1;
        background: linear-gradient(var.$darkPurple, var.$lightPurple);
        background-clip: text;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        color: transparent;
        transition: opacity 500ms;
        -webkit-text-stroke: 0 transparent;
    }

    &::before {
        position: absolute;
        top: -8px;
        left: 0;
        opacity: 1;
        -webkit-text-stroke: 0.2px black;
        transition: opacity 500ms;
    }

    &:hover {
        &:after {
            opacity: 1;
        }

        &:before {
            opacity: 0;
        }
    }
}


//   ::: BACKGROUNDS :::   //

//ball background
@mixin ballColor {
    background: radial-gradient(ellipse farthest-corner at 70% 30%, #fff, #ff79da 10% 22%, #9356dc 80% 100%);
}

//transparent background
@mixin transparentBackground {
    background-color: transparent;
}

//parent's background
@mixin inheritBackground {
    background-color: inherit;
}

//white backgrounds
@mixin whiteBackground {
    background-color: white;
}

@mixin whiteBackground-gradient($degrees: 0deg) {
    background: linear-gradient($degrees, white 65%, transparent);
}

//green backgrounds
@mixin lightGreenBackground {
    background-color: var.$lightGreen;
}

//gray backgrounds
@mixin basicGrayBackground {
    background-color: var.$lightGray;
}

@mixin lightGrayBackground {
    background-color: var.$ultralightGray;
}

@mixin darkGrayBackground {
    background-color: var.$darkGray;
}

//purple backgrounds
@mixin purpleBackground {
    background-color: var.$darkPurple;
}

@mixin purpleBackground-gradient($degrees: 0deg) {
    background: linear-gradient($degrees, var.$darkPurple, var.$lightPurple);
}



//   ::: SHADOWS :::   //

//buttons shadows
@mixin btnShadow {
    box-shadow: 0 4px var.$btnShadowBlur 0 var.$extremelyTransparentGrey;
}

//cards shadows
@mixin explanationCardsShadow {
    box-shadow: 0 4px var.$cardShadowBlur 0 var.$veryTransparentGrey;
}

@mixin cardsShadows {
    box-shadow: 0 4px var.$cardShadowBlur 0 var.$extremelyTransparentGrey;
}

@mixin locationSectionShadow {
    box-shadow: inset 0px 2px 4px var.$veryTransparentGrey;
}



//   ::: PROPORTIONAL DIMENSIONS :::   //

@mixin fitItems($percentage) {
    flex: 1 1 $percentage;
}



//   ::: CONTAINERS :::   //

//circle container
@mixin circle($size) {
    width: $size;
    height: $size;
    border-radius: $size;
}

//square container
@mixin square($size) {
    width: $size;
    height: $size;
}

//rectangle container
@mixin rectangle($width, $height) {
    width: $width;
    height: $height;
}



//   ::: CONTAINERS :::   //

//horizontal box
@mixin horizontalBox($justify-content:start) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: $justify-content;
    align-items: center;
    text-align: center;
}

//horizontal wrapped box
@mixin horizontalBox-wrapped($justify-content:start) {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: $justify-content;
    align-items: center;
    text-align: center;
}

//horizontal reversed box
@mixin horizontalBox-reverse($justify-content: end) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row-reverse;
    justify-content: $justify-content;
    align-items: end;
    text-align: end;
}

//vertical box
@mixin verticalBox($justify-content:start) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
    justify-content: $justify-content;
    align-items: center;
    text-align: center;
}

//vertical wrapped box
@mixin verticalBox-wrapped($justify-content:start) {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    justify-content: $justify-content;
    align-items: center;
    text-align: center;
}

//t-shape box |=
@mixin verticalBox-cross($justify-content: start) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
    justify-content: $justify-content;
    align-items: start;
    text-align: start;
}

//centred box
@mixin centredBox($direction: row) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: $direction;
    justify-content: center;
    align-items: center;
    text-align: center;
}

//inherit box
@mixin inheritBox {
    display: inherit;
    flex-wrap: inherit;
    flex-direction: inherit;
    justify-content: inherit;
    align-items: inherit;
    text-align: inherit;
}



//   ::: BUTTONS :::   //

//button types
@mixin btn {
    height: var.$btnHeight;
    width: var.$btnWidth;
    color: white;
    border-radius: var.$btnRadius;
}

@mixin wideBtn {
    width: 218px;
}



//   ::: LAYOUTS :::   //

//return icon layout
@mixin returnIconLayout {
    position: absolute;
    left: 17px;
    top: 50%;
    translate: 0 -50%;
}

//logo layout
@mixin centredItem {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
}

//vertically centred
@mixin verticalAlign {
    position: absolute;
    top: 50%;
    translate: 0 -50%;
}

//horizontally centred
@mixin horizontalAlign {
    position: absolute;
    left: 50%;
    translate: -50% 0;
}

//pop-up layout 
@mixin popUpLayout {
    position: absolute;
    top: 5%;
    right: 3.7%;
}

//circle layout
@mixin circleLayout {
    position: absolute;
    left: -13.5px;
    top: calc(50%);
    translate: 0 -50%;
    text-align: center;
}

//order button layout
@mixin orderBtnLayout {
    position: absolute;
    bottom: 0;
    left: 50%;
    translate: 0 -50%;
}

//item positioned as its parent
@mixin inheritLayout {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
}

//item align
@mixin alignment($alignment) {
    text-align: $alignment;
    align-items: $alignment;
}

@mixin ballPosition {
    position: fixed;
    top: 50vh;
    translate: -200% -50%;
}

@mixin animationPosition {
    position: fixed;
    top: 0;
    left: 0;
}


//   ::: DECORATIONS :::   //

//turquoise underline
@mixin underline {
    width: 40px;
    line-height: 27px;
    border-bottom: solid 2px var.$lightGreen;
}

//strokes
@mixin stroke {
    -webkit-text-stroke: 0.8px black;
}

@mixin noStroke {
    -webkit-text-stroke: 0px transparent;
}

//triple dot
@mixin tripleDot {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}



//   ::: TRANSITIONS :::   //

// standard transition
@mixin standardTransition {
    transition: all 0.5s;
}